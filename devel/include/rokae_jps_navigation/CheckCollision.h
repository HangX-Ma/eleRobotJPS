// Generated by gencpp from file rokae_jps_navigation/CheckCollision.msg
// DO NOT EDIT!


#ifndef ROKAE_JPS_NAVIGATION_MESSAGE_CHECKCOLLISION_H
#define ROKAE_JPS_NAVIGATION_MESSAGE_CHECKCOLLISION_H

#include <ros/service_traits.h>


#include <rokae_jps_navigation/CheckCollisionRequest.h>
#include <rokae_jps_navigation/CheckCollisionResponse.h>


namespace rokae_jps_navigation
{

struct CheckCollision
{

typedef CheckCollisionRequest Request;
typedef CheckCollisionResponse Response;
Request request;
Response response;

typedef Request RequestType;
typedef Response ResponseType;

}; // struct CheckCollision
} // namespace rokae_jps_navigation


namespace ros
{
namespace service_traits
{


template<>
struct MD5Sum< ::rokae_jps_navigation::CheckCollision > {
  static const char* value()
  {
    return "9553736970fcba3d957b6a5220bb6872";
  }

  static const char* value(const ::rokae_jps_navigation::CheckCollision&) { return value(); }
};

template<>
struct DataType< ::rokae_jps_navigation::CheckCollision > {
  static const char* value()
  {
    return "rokae_jps_navigation/CheckCollision";
  }

  static const char* value(const ::rokae_jps_navigation::CheckCollision&) { return value(); }
};


// service_traits::MD5Sum< ::rokae_jps_navigation::CheckCollisionRequest> should match
// service_traits::MD5Sum< ::rokae_jps_navigation::CheckCollision >
template<>
struct MD5Sum< ::rokae_jps_navigation::CheckCollisionRequest>
{
  static const char* value()
  {
    return MD5Sum< ::rokae_jps_navigation::CheckCollision >::value();
  }
  static const char* value(const ::rokae_jps_navigation::CheckCollisionRequest&)
  {
    return value();
  }
};

// service_traits::DataType< ::rokae_jps_navigation::CheckCollisionRequest> should match
// service_traits::DataType< ::rokae_jps_navigation::CheckCollision >
template<>
struct DataType< ::rokae_jps_navigation::CheckCollisionRequest>
{
  static const char* value()
  {
    return DataType< ::rokae_jps_navigation::CheckCollision >::value();
  }
  static const char* value(const ::rokae_jps_navigation::CheckCollisionRequest&)
  {
    return value();
  }
};

// service_traits::MD5Sum< ::rokae_jps_navigation::CheckCollisionResponse> should match
// service_traits::MD5Sum< ::rokae_jps_navigation::CheckCollision >
template<>
struct MD5Sum< ::rokae_jps_navigation::CheckCollisionResponse>
{
  static const char* value()
  {
    return MD5Sum< ::rokae_jps_navigation::CheckCollision >::value();
  }
  static const char* value(const ::rokae_jps_navigation::CheckCollisionResponse&)
  {
    return value();
  }
};

// service_traits::DataType< ::rokae_jps_navigation::CheckCollisionResponse> should match
// service_traits::DataType< ::rokae_jps_navigation::CheckCollision >
template<>
struct DataType< ::rokae_jps_navigation::CheckCollisionResponse>
{
  static const char* value()
  {
    return DataType< ::rokae_jps_navigation::CheckCollision >::value();
  }
  static const char* value(const ::rokae_jps_navigation::CheckCollisionResponse&)
  {
    return value();
  }
};

} // namespace service_traits
} // namespace ros

#endif // ROKAE_JPS_NAVIGATION_MESSAGE_CHECKCOLLISION_H
