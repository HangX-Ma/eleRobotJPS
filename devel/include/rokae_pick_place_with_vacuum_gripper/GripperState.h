// Generated by gencpp from file rokae_pick_place_with_vacuum_gripper/GripperState.msg
// DO NOT EDIT!


#ifndef ROKAE_PICK_PLACE_WITH_VACUUM_GRIPPER_MESSAGE_GRIPPERSTATE_H
#define ROKAE_PICK_PLACE_WITH_VACUUM_GRIPPER_MESSAGE_GRIPPERSTATE_H

#include <ros/service_traits.h>


#include <rokae_pick_place_with_vacuum_gripper/GripperStateRequest.h>
#include <rokae_pick_place_with_vacuum_gripper/GripperStateResponse.h>


namespace rokae_pick_place_with_vacuum_gripper
{

struct GripperState
{

typedef GripperStateRequest Request;
typedef GripperStateResponse Response;
Request request;
Response response;

typedef Request RequestType;
typedef Response ResponseType;

}; // struct GripperState
} // namespace rokae_pick_place_with_vacuum_gripper


namespace ros
{
namespace service_traits
{


template<>
struct MD5Sum< ::rokae_pick_place_with_vacuum_gripper::GripperState > {
  static const char* value()
  {
    return "54728c51db3fb99fe3505e3f6f89c845";
  }

  static const char* value(const ::rokae_pick_place_with_vacuum_gripper::GripperState&) { return value(); }
};

template<>
struct DataType< ::rokae_pick_place_with_vacuum_gripper::GripperState > {
  static const char* value()
  {
    return "rokae_pick_place_with_vacuum_gripper/GripperState";
  }

  static const char* value(const ::rokae_pick_place_with_vacuum_gripper::GripperState&) { return value(); }
};


// service_traits::MD5Sum< ::rokae_pick_place_with_vacuum_gripper::GripperStateRequest> should match
// service_traits::MD5Sum< ::rokae_pick_place_with_vacuum_gripper::GripperState >
template<>
struct MD5Sum< ::rokae_pick_place_with_vacuum_gripper::GripperStateRequest>
{
  static const char* value()
  {
    return MD5Sum< ::rokae_pick_place_with_vacuum_gripper::GripperState >::value();
  }
  static const char* value(const ::rokae_pick_place_with_vacuum_gripper::GripperStateRequest&)
  {
    return value();
  }
};

// service_traits::DataType< ::rokae_pick_place_with_vacuum_gripper::GripperStateRequest> should match
// service_traits::DataType< ::rokae_pick_place_with_vacuum_gripper::GripperState >
template<>
struct DataType< ::rokae_pick_place_with_vacuum_gripper::GripperStateRequest>
{
  static const char* value()
  {
    return DataType< ::rokae_pick_place_with_vacuum_gripper::GripperState >::value();
  }
  static const char* value(const ::rokae_pick_place_with_vacuum_gripper::GripperStateRequest&)
  {
    return value();
  }
};

// service_traits::MD5Sum< ::rokae_pick_place_with_vacuum_gripper::GripperStateResponse> should match
// service_traits::MD5Sum< ::rokae_pick_place_with_vacuum_gripper::GripperState >
template<>
struct MD5Sum< ::rokae_pick_place_with_vacuum_gripper::GripperStateResponse>
{
  static const char* value()
  {
    return MD5Sum< ::rokae_pick_place_with_vacuum_gripper::GripperState >::value();
  }
  static const char* value(const ::rokae_pick_place_with_vacuum_gripper::GripperStateResponse&)
  {
    return value();
  }
};

// service_traits::DataType< ::rokae_pick_place_with_vacuum_gripper::GripperStateResponse> should match
// service_traits::DataType< ::rokae_pick_place_with_vacuum_gripper::GripperState >
template<>
struct DataType< ::rokae_pick_place_with_vacuum_gripper::GripperStateResponse>
{
  static const char* value()
  {
    return DataType< ::rokae_pick_place_with_vacuum_gripper::GripperState >::value();
  }
  static const char* value(const ::rokae_pick_place_with_vacuum_gripper::GripperStateResponse&)
  {
    return value();
  }
};

} // namespace service_traits
} // namespace ros

#endif // ROKAE_PICK_PLACE_WITH_VACUUM_GRIPPER_MESSAGE_GRIPPERSTATE_H
